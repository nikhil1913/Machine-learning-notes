📌 Linear Regression – Quick Notes
🧠 Concept
Linear Regression is used to model the relationship between a dependent variable (target) and one or more independent variables (features).

It tries to fit a straight line (Y = mX + c) that best predicts Y from X.

⚙️ Steps in Implementation
Import Libraries

python
Copy
Edit
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
Load & Preprocess Data

Handle missing values

Encode categorical data (OneHotEncoder or pd.get_dummies())

Avoid Dummy Variable Trap

Remove one dummy column to avoid multicollinearity

python
Copy
Edit
X = X[:, 1:]
Split the Data

python
Copy
Edit
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=0)
Train the Model

python
Copy
Edit
regressor = LinearRegression()
regressor.fit(X_train, Y_train)
Make Predictions

python
Copy
Edit
Y_pred = regressor.predict(X_test)
Check Coefficients

python
Copy
Edit
print(regressor.coef_)   # Slopes
print(regressor.intercept_)  # Intercept
📉 Key Terms
Intercept (b₀): Value of Y when all X = 0

Coefficient (b₁, b₂...): Effect of each feature on the target

Random State: Ensures reproducible splits

Seed: Controls randomness in shuffling/training

Dummy Variable Trap: Occurs when all dummy variables are used — remove one

